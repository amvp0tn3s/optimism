name: Docker Build Scan
on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Image to build'
        required: true
        type: choice
        options:
          - 'op-ci-builder'
          - 'op-node'
          - 'op-batcher'
          - 'op-proposer'
          - 'op-proxyd'
          - 'op-ufm'
          - 'op-bedrock-l1'
          - 'op-bedrock-l2'
          - 'ops-bedrock'
          - 'op-indexer'
          - 'op-heartbeat'
          - 'op-exporter'
          - 'op-program'
          - 'op-indexer-ui'
          - 'op-challenger'
          - 'op-endpoint-monitor'
          - 'op-opwheel'
      sha:
        description: 'SHA of the commit to build. Required for all images except op-ci-builder'
        required: false
        default: ''
jobs:
  check-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Check workflow inputs
        run: |
          if [ -z "${{ github.event.inputs.image }}" ]; then
            echo "Image is required"
            exit 1
          elif [ "${{ github.event.inputs.image }}" != "op-ci-builder" ] && [ -z "${{ github.event.inputs.sha }}" ]; then
            echo "SHA is required for all images except op-ci-builder"
            exit 1
          fi

  build-scan-container-ci-builder:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-ci-builder' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-ci-builder-${{ github.sha }}
      dockerfile: ops/docker/ci-builder/Dockerfile

  build-scan-container-op-node:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-node' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-node-${{ github.sha }}
      dockerfile: op-node/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-op-batcher:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-batcher' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-batcher-${{ github.sha }}
      dockerfile: op-batcher/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-op-proposer:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-proposer' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-proposer-${{ github.sha }}
      dockerfile: op-proposer/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-proxyd:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-proxyd' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-proxyd-${{ github.sha }}
      dockerfile: proxyd/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-op-ufm:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-ufm' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-ufm-${{ github.sha }}
      dockerfile: op-ufm/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-ops-bedrock-l1:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-bedrock-l1' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-bedrock-l1-${{ github.sha }}
      dockerfile: ops-bedrock/Dockerfile.l1
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-ops-bedrock-l2:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-bedrock-l2' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-bedrock-l2-${{ github.sha }}
      dockerfile: ops-bedrock/Dockerfile.l2
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-ops-bedrock:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'ops-bedrock' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: ops-bedrock-${{ github.sha }}
      dockerfile: ops-bedrock/Dockerfile.stateviz
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-indexer:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-indexer' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-indexer-${{ github.sha }}
      dockerfile: indexer/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-op-heartbeat:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-heartbeat' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-heartbeat-${{ github.sha }}
      dockerfile: op-heartbeat/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-op-exporter:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-exporter' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-exporter-${{ github.sha }}
      dockerfile: op-exporter/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-op-program:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-program' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-program-${{ github.sha }}
      dockerfile: op-program/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-indexer-ui:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-indexer-ui' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-indexer-ui-${{ github.sha }}
      dockerfile: indexer/ui/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-op-challenger:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-challenger' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-challenger-${{ github.sha }}
      dockerfile: op-challenger/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-endpoint-monitor:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-endpoint-monitor' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-endpoint-monitor-${{ github.sha }}
      dockerfile: endpoint-monitor/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}

  build-scan-container-opwheel:
    uses: ./.github/workflows/docker-generic-workflow.yaml
    needs: check-inputs
    if: ${{ github.event.inputs.image == 'op-opwheel' }}
    with:
      registry: us-west1-docker.pkg.dev/devopsre/dev-images/optimism
      tags: op-opwheel-${{ github.sha }}
      dockerfile: op-wheel/Dockerfile
      build-args: OP_STACK_GO_BUILDER=us-west1-docker.pkg.dev/devopsre/dev-images/optimism/op-ci-builder:${{ inputs.sha }}
